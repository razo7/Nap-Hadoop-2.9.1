/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_apache_hadoop_crypto_OpensslCipher */

#ifndef _Included_org_apache_hadoop_crypto_OpensslCipher
#define _Included_org_apache_hadoop_crypto_OpensslCipher
#ifdef __cplusplus
extern "C" {
#endif
#undef org_apache_hadoop_crypto_OpensslCipher_ENCRYPT_MODE
#define org_apache_hadoop_crypto_OpensslCipher_ENCRYPT_MODE 1L
#undef org_apache_hadoop_crypto_OpensslCipher_DECRYPT_MODE
#define org_apache_hadoop_crypto_OpensslCipher_DECRYPT_MODE 0L
/*
 * Class:     org_apache_hadoop_crypto_OpensslCipher
 * Method:    initIDs
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_apache_hadoop_crypto_OpensslCipher_initIDs
  (JNIEnv *, jclass);

/*
 * Class:     org_apache_hadoop_crypto_OpensslCipher
 * Method:    initContext
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_org_apache_hadoop_crypto_OpensslCipher_initContext
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     org_apache_hadoop_crypto_OpensslCipher
 * Method:    init
 * Signature: (JIII[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_apache_hadoop_crypto_OpensslCipher_init
  (JNIEnv *, jobject, jlong, jint, jint, jint, jbyteArray, jbyteArray);

/*
 * Class:     org_apache_hadoop_crypto_OpensslCipher
 * Method:    update
 * Signature: (JLjava/nio/ByteBuffer;IILjava/nio/ByteBuffer;II)I
 */
JNIEXPORT jint JNICALL Java_org_apache_hadoop_crypto_OpensslCipher_update
  (JNIEnv *, jobject, jlong, jobject, jint, jint, jobject, jint, jint);

/*
 * Class:     org_apache_hadoop_crypto_OpensslCipher
 * Method:    doFinal
 * Signature: (JLjava/nio/ByteBuffer;II)I
 */
JNIEXPORT jint JNICALL Java_org_apache_hadoop_crypto_OpensslCipher_doFinal
  (JNIEnv *, jobject, jlong, jobject, jint, jint);

/*
 * Class:     org_apache_hadoop_crypto_OpensslCipher
 * Method:    clean
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_apache_hadoop_crypto_OpensslCipher_clean
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_apache_hadoop_crypto_OpensslCipher
 * Method:    getLibraryName
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_apache_hadoop_crypto_OpensslCipher_getLibraryName
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
